<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Sector extends \Entities\Sector implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setCodigo($codigo)
    {
        $this->__load();
        return parent::setCodigo($codigo);
    }

    public function getCodigo()
    {
        if ($this->__isInitialized__ === false) {
            return $this->_identifier["codigo"];
        }
        $this->__load();
        return parent::getCodigo();
    }

    public function setTipo($tipo)
    {
        $this->__load();
        return parent::setTipo($tipo);
    }

    public function getTipo()
    {
        $this->__load();
        return parent::getTipo();
    }

    public function setNombre($nombre)
    {
        $this->__load();
        return parent::setNombre($nombre);
    }

    public function getNombre()
    {
        $this->__load();
        return parent::getNombre();
    }

    public function setLat($lat)
    {
        $this->__load();
        return parent::setLat($lat);
    }

    public function getLat()
    {
        $this->__load();
        return parent::getLat();
    }

    public function setLng($lng)
    {
        $this->__load();
        return parent::setLng($lng);
    }

    public function getLng()
    {
        $this->__load();
        return parent::getLng();
    }

    public function setUrl($url)
    {
        $this->__load();
        return parent::setUrl($url);
    }

    public function getUrl()
    {
        $this->__load();
        return parent::getUrl();
    }

    public function setSectorPadreCodigo($sectorPadreCodigo)
    {
        $this->__load();
        return parent::setSectorPadreCodigo($sectorPadreCodigo);
    }

    public function getSectorPadreCodigo()
    {
        $this->__load();
        return parent::getSectorPadreCodigo();
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->__load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->__load();
        return parent::getUpdatedAt();
    }

    public function addSector(\Entities\Sector $children)
    {
        $this->__load();
        return parent::addSector($children);
    }

    public function getChildren()
    {
        $this->__load();
        return parent::getChildren();
    }

    public function setParent(\Entities\Sector $parent = NULL)
    {
        $this->__load();
        return parent::setParent($parent);
    }

    public function getParent()
    {
        $this->__load();
        return parent::getParent();
    }

    public function addDataset(\Entities\Dataset $datasets)
    {
        $this->__load();
        return parent::addDataset($datasets);
    }

    public function getDatasets()
    {
        $this->__load();
        return parent::getDatasets();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'codigo', 'tipo', 'nombre', 'lat', 'lng', 'url', 'sector_padre_codigo', 'created_at', 'updated_at', 'children', 'parent', 'datasets');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}