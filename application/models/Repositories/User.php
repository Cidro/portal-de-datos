<?php

namespace Repositories;

use Doctrine\ORM\EntityRepository;

/**
 * User
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class User extends EntityRepository{
	//Busca los usuarios con el orden y los filtros dados
	public function findWithOrdering($options = null, $ordering = array('created_at' => 'DESC'), $limit = 4, $offset = 0){
		$qb = $this->_em->createQueryBuilder();

		$qb->from('Entities\User', 'u');

		if(isset($options['total'])){

			$qb->select('COUNT(u.id)');

		}else{

			$qb->select('u');

			foreach ($ordering as $field => $dir) {
				$qb->addOrderBy('u.'.$field, $dir);
			}

		}

		//Filtros de busqueda
		if($options){
			if(isset($options['rol'])){
				$qb->leftJoin('u.rols', 'r')
					->andWhere('r.id = :rol')
					->setParameter('rol', $options['rol']);
			}
            if(isset($options['servicio'])){
                $qb->andWhere('u.servicio = :servicio');
                $qb->setParameter('servicio', $options['servicio']);
            }
            if(isset($options['fullname'])){
                $qb->andWhere('u.fullname LIKE :fullname');
                $qb->setParameter('fullname', '%'.$options['fullname'].'%');
            }
		}

		if(isset($options['total'])){

			return $qb->getQuery()->getSingleScalarResult();

		}else{

			$query = $qb->setFirstResult($offset)
									->setMaxResults($limit)
									->getQuery();

			return $query->getResult();

		}
	}
}